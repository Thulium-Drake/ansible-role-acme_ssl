---
acme_ssl_basedir: '/etc/acme-ssl'        # Directory to save certificates on control host for distribution
acme_ssl_destdir: '/etc/ssl/acme'        # SSL destination dir on the target server

acme_ssl_account_key: "{{ acme_ssl_basedir }}/account.key"  # Account key for ACME
acme_ssl_directory_version: 2                               # Which ACME version to use
acme_ssl_terms_agreed: true                                 # Accept the terms of the ACME directory
acme_ssl_admin_email: 'root@example.com'                    # Accept the terms of the ACME directory

# Which ACME directory to use
acme_ssl_directory: 'https://acme-staging-v02.api.letsencrypt.org/directory'  # Staging
#acme_ssl_directory: 'https://acme-v02.api.letsencrypt.org/directory'         # Production

acme_ssl_directory_validate: true                           # Check the certificates for the ACME directory

# ACME CA certificate URL
acme_ssl_ca_url: 'https://letsencrypt.org/certs/fakeleintermediatex1.pem'         # Staging
#acme_ssl_ca_url: 'https://letsencrypt.org/certs/isrgrootx1.pem'                  # Production ISRG Root
#acme_ssl_ca_url: 'https://letsencrypt.org/certs/isrg-root-x1-cross-signed.pem'   # Production ISRG Root, Cross-Signed

# Selection criteria for the used chain
#acme_ssl_select_chain:
#  test_certificates: 'last'
#  issuer: {"commonName": "ISRG Root X1"}

# ACME OCSP certificate URL
acme_ssl_ocsp_url: 'https://letsencrypt.org/certs/isrg-root-ocsp-x1.pem.txt'

acme_ssl_rsa_bits: 4096                 # How long to make RSA keys
acme_ssl_ecparam_curve: 'secp384r1'     # Which elliptic curve to use for the private key

acme_ssl_validity_min: 30               # How many days a cert can have left before it's renewed
acme_ssl_default_type: 'ECC'            # Default certificate type
acme_ssl_default_challenge: 'dns-01'    # Default challenge type

acme_ssl_nameserver: 'ns1.example.com'  # DNS master server
acme_ssl_tsig_key_name: ''              # TSIG key name
acme_ssl_tsig_key_secret: ''            # TSIG key value
acme_ssl_tsig_key_algo: ''              # TSIG key algorithm

acme_ssl_dns_wait: 120                  # Time to wait in seconds for DNS update to propagate

acme_ssl_reload_services: false         # Automatically try to reload supported services:
                                        # Nginx, Apache or Zimbra

acme_ssl_local_ansible: true            # Set to false if the system making the ACME requests is not the Ansible
                                        # controller
# The certficates that are requested
# domain: name of the certificate
# challenge: dns-01 or http-01
# type: ECC or RSA
# dns_zone / web_dir: Directory/Zone to update with the challenge
# server: destination server to use the cert on. Please note that this is also the webserver used for http-01 validation.
# If you wish to have different machines where you want to mint certs and use them, use the dns-01 challenge.
acme_ssl_certificates:
  - { domain: 'site.example.com',  challenge: 'dns-01',  dns_zone: 'example.com',  server: '127.0.0.1' }
  - { domain: 'site2.example.com', type: 'RSA', challenge: 'http-01', web_dir: '/var/www/html', server: 'localhost' }
  - { domain: 'site3.example.com', altname: 'service.example.com', challenge: 'http-01', web_dir: '/var/www/html', server: 'localhost' }
