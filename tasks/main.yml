---
# What: Generate and request certificates via ACME
#
- name: 'Include distribution specific vars'
  ansible.builtin.include_vars:
    file: "{{ ansible_facts['os_family'] }}.yml"

- name: 'Install required packages'
  ansible.builtin.package:
    name: "{{ ssl_packages }}"
    state: 'present'

- name: 'Set certificate owner'
  ansible.builtin.set_fact:
    acme_ssl_owner: "{{ lookup('env', 'USER') }}"
  when: acme_ssl_owner is not defined

- name: 'Check ACME account key'
  ansible.builtin.stat:
    path: "{{ acme_ssl_account_key }}"
  register: 'k'

- name: 'Check ACME account'
  ansible.builtin.include_tasks:
    file: 'acme_create_account.yml'
  when: not k['stat']['exists']

- name: 'Process request'
  ansible.builtin.include_tasks:
    file: 'acme_request.yml'
  loop: "{{ acme_ssl_certificates }}"
  loop_control:
    loop_var: 'certificate'

- name: 'Deploy certificate and restart services'
  ansible.builtin.include_tasks:
    file: 'acme_deploy.yml'
  loop: "{{ acme_ssl_certificates }}"
  loop_control:
    loop_var: 'certificate'

- name: 'Update TLSA records'
  ansible.builtin.include_tasks:
    file: 'acme_tlsa_update.yml'
  loop: "{{ acme_ssl_certificates }}"
  loop_control:
    loop_var: 'certificate'
  when: acme_ssl_tlsa_update
