---
# All tasks required to create the validation for the DNS-01 challenge
#
- name: 'Check required packages'
  package:
    name: "{{ dns_packages }}"
    state: 'present'

- name: "Register challenge DNS records - {{ certificate.domain }}"
  community.general.nsupdate:
    server: "{{ acme_ssl_nameserver }}"
    ttl: "60"
    type: "TXT"
    zone: "{{ certificate.dns_zone | default(certificate.domain.split('.')[1:] | join('.')) }}"
    record:  "{{ acme_ssl_challenge_data['challenge_data'][certificate.domain]['dns-01']['resource'] }}.{{ certificate.domain }}."
    value: "{{ acme_ssl_challenge_data['challenge_data'][certificate.domain]['dns-01']['resource_value'] }}"
    key_algorithm: "{{ (acme_ssl_tsig_key_algo != '') | ternary(acme_ssl_tsig_key_algo, omit) }}"
    key_name: "{{ (acme_ssl_tsig_key_name != '') | ternary(acme_ssl_tsig_key_name, omit) }}"
    key_secret: "{{ (acme_ssl_tsig_key_secret != '') | ternary(acme_ssl_tsig_key_secret, omit) }}"
    state: 'present'
  register: 'dns_registered'
  retries: 5
  delay: 3
  until: not dns_registered.failed

- name: "Register additional challenge DNS records - {{ certificate.domain }}"
  community.general.nsupdate:
    server: "{{ acme_ssl_nameserver }}"
    ttl: "60"
    type: "TXT"
    zone: "{{ certificate.dns_zone | default(altname_record.split('.')[1:] | join('.')) }}"
    record:  "{{ acme_ssl_challenge_data['challenge_data'][altname_record]['dns-01']['resource'] }}.{{ altname_record }}."
    value: "{{ acme_ssl_challenge_data['challenge_data'][altname_record]['dns-01']['resource_value'] }}"
    state: 'present'
    key_algorithm: "{{ (acme_ssl_tsig_key_algo != '') | ternary(acme_ssl_tsig_key_algo, omit) }}"
    key_name: "{{ (acme_ssl_tsig_key_name != '') | ternary(acme_ssl_tsig_key_name, omit) }}"
    key_secret: "{{ (acme_ssl_tsig_key_secret != '') | ternary(acme_ssl_tsig_key_secret, omit) }}"
  register: 'dns_registered'
  retries: 5
  delay: 3
  until: not dns_registered.failed
  loop: "{{ certificate.altname }}"
  loop_control:
    loop_var: 'altname_record'
  when: certificate.altname is defined

- name: 'Wait for DNS update to propagate to slaves'
  pause:
    seconds: "{{ acme_ssl_dns_wait }}"
